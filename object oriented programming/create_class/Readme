"""
In Python, the __init__ method is considered a classes constructor. 
Note that there are two underscores prefixing and suffixing the init.

The __init__ method is called immediately after an instance of a class is created 
and is usually responsible for defining instance attributes and performing any required set up steps.


The first parameter in the class constructor (a.k.a the __init__ method) is implicitly passed during the instantiation of a object and is mandatory. 
Note that the name self is a recommended convention in Python but not the mandatory name for this first parameter.

the self parameter will be implicitly passed to the constructor 
and does not need to be manually passed during instantiation

In Python object oriented programming an attribute is any data/objects associated with a class or an instance of a class. 
Attributes are not always defined inside of the class constructor and can be added to an instance after it's creation.

According to PEP-8 (the style guide for Python) the proper casing for class names is PascalCase.
 Note that this is also commonly referred to as CapitalCamelCase.

In Python, attributes can be accessed from outside of a class.
 So long as you have a reference to an instance you can access it's attributes. For example:

class Dog:
    def __init__(self, name):
        self.name = name
      
dog = Dog("Tim")
print(dog.name)  # this prints "Tim"

In Python, attributes can be created outside of a class by defining them directly on an instance. For example:

class Dog:
    def __init__(self, name):
        self.name = name  # name is an attribute defined in the constructor
      
dog = Dog("Tim")
dog.age = 10  # this creates a new attribute called age on this dog instance

class Foo:
    def __init__(self, name):
        self.name = name
    
a = Foo("a")
b = Foo("b")
a.name = b.name
b.name = "c"
a.x = 2
b.x = 1
x = (a.x + b.x) * (a.name + b.name)

bcbcbc


"""



"""
class ContactInformation:
    def __init__(self, first_name, last_name, email, phone_number):
        self.first_name = first_name
        self.last_name = last_name
        self.email = email
        self.phone_number = phone_number

person1 = ContactInformation("surya", "jagatha", "jpsuryas1222@gmail.com", "8686864534")
person1.country = None
person2 = ContactInformation("lavanya", "jagatha", "lballaratna@gmail.com", "9603194061")

person2.country = None

"""